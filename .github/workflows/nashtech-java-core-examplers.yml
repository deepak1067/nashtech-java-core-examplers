# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: nashtech-java-core-examplers

on:
  push:
      branches:
        - develop
  repository_dispatch:
    types:
      - trigger-from-nashtech-java-core
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven

    - name: Build and Publish Maven
      run: mvn clean install
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.run_number }}

        

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: nashtech-java-core-examplers-jars
        path: |
          target/*.jar
          !target/findsecbugs-plugin*.jar
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: my-kubernetes-project-389604

      - name: Configure Docker and Kubernetes
        run: |
          gcloud auth configure-docker --quiet
          gcloud container clusters get-credentials deployment-cluster-sdk	 --zone asia-southeast1-a --project my-kubernetes-project-389604

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/my-kubernetes-project-389604/reactive-docker-image:${{ github.sha }} .
          docker push gcr.io/my-kubernetes-project-389604/reactive-docker-image:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f - <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: reactive-deployment
            labels:
              app: reactive
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: reactive
            template:
              metadata:
                labels:
                  app: reactive
              spec:
                containers:
                  - name: reactive-container
                    image: gcr.io/my-kubernetes-project-389604/reactive-docker-image:${{ github.sha }}
                    ports:
                      - containerPort: 8088
          EOF

      # Optional: Run additional tests or tasks after deployment
#      - name: Run additional tests
#        run: |
#          # Add your additional tests or tasks here